alias func_num R1;
alias cur_pid R2;

if (func_num == ACQUIRE_TERMINAL) then
	while ([TERMINAL_STATUS_TABLE] == 1) do
		[PROCESS_TABLE + cur_pid*16 + 4] = WAIT_TERMINAL;
		multipush(R0, R1, R2);
		call MOD_5;
		multipop(R0, R1, R2);
	endwhile;

	[TERMINAL_STATUS_TABLE] = 1;
	[TERMINAL_STATUS_TABLE + 1] = cur_pid;
	return;
endif;
if (func_num == RELEASE_TERMINAL) then
	if ([TERMINAL_STATUS_TABLE + 1] != cur_pid) then
		R0 = -1;
		return;
	endif;
	[TERMINAL_STATUS_TABLE] = 0;

	alias i R3;
	i = 0;
	while (i < MAX_PROC_NUM) do
		if ([PROCESS_TABLE + 16*i + 4] == WAIT_TERMINAL) then
			[PROCESS_TABLE + 16*i + 4] = READY;
		endif;
		i = i + 1;
	endwhile;

	R0 = 0;
	return;
endif;
if (func_num == ACQUIRE_DISK) then
	while ([DISK_STATUS_TABLE] == 1) do
		[PROCESS_TABLE + cur_pid*16 + 4] = WAIT_DISK;
		multipush(R0, R1, R2);
		call MOD_5;
		multipop(R0, R1, R2);
	endwhile;

	[DISK_STATUS_TABLE] = 1;
	[DISK_STATUS_TABLE + 4] = cur_pid;

	return;
endif;
breakpoint;
R0 = 1;
return;
